<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
    
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.2.3.RELEASE</version>
        <relativePath />
    </parent>   

	<groupId>in.co.psoft.hrm</groupId>
	<artifactId>ohrm</artifactId>
	<version>0.0.1-SNAPSHOT</version>
    
	<packaging>war</packaging>

	<properties>
        <!-- can be 8 also -->
		<java.version>7</java.version>
    
        <!-- can be 8.0.x also -->
        <tomcat.version>7.0.62</tomcat.version>
        
        <jsf-mojarra.version>2.2.11</jsf-mojarra.version>
        <primefaces.version>5.2</primefaces.version>
        
        <rewrite.version>2.0.12.Final</rewrite.version>
        
        <eclipselink.version>2.6.0</eclipselink.version>
        <querydsl.version>3.6.3</querydsl.version>
        
        <springloaded.version>1.2.3.RELEASE</springloaded.version>
        
	</properties>
	

	<dependencies>
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-web</artifactId>
	    </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>hibernate-entitymanager</artifactId>
                    <groupId>org.hibernate</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>eclipselink</artifactId>
            <version>${eclipselink.version}</version>
        </dependency>
        <dependency>
            <groupId>com.mysema.querydsl</groupId>
            <artifactId>querydsl-jpa</artifactId>
            <version>${querydsl.version}</version>
        </dependency>
        
        
        <!-- Explicitly define tomcat dependencies as provided to exclude them from war-file.
             But the war-file still stays executable as Spring Boot Plugin will keep
             provided dependencies under /WEB-INF/lib-provided  
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Jasper is needed for Mojarra -->      
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <scope>provided</scope>
        </dependency>      
      
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <version>${primefaces.version}</version>
        </dependency>

        <!-- Repository: http://repository.primefaces.org/ -->      
        <!-- include a custom theme jar -->
        <dependency>
            <groupId>org.primefaces.themes</groupId>
            <artifactId>bootstrap</artifactId>
            <version>1.0.10</version>
        </dependency>
	
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.faces</artifactId>
			<version>${jsf-mojarra.version}</version>
		</dependency>
    
        <dependency>
           <groupId>org.ocpsoft.rewrite</groupId>
           <artifactId>rewrite-servlet</artifactId>
           <version>${rewrite.version}</version>
        </dependency>
        <dependency>
            <groupId>org.ocpsoft.logging</groupId>
            <artifactId>logging-adapter-slf4j</artifactId>
            <version>1.0.3.Final</version>
        </dependency>

        
        <dependency>
    <groupId>com.h2database</groupId>
    <artifactId>h2</artifactId>
    <version>1.4.196</version>
    <scope>runtime</scope>
</dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        
	</dependencies>
  
    <build>
        <plugins>
            <plugin>
                <groupId>com.mysema.querydsl</groupId>
                <artifactId>querydsl-maven-plugin</artifactId>
                <version>${querydsl.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.mysema.querydsl</groupId>
                        <artifactId>querydsl-apt</artifactId>
                        <version>${querydsl.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>jpa-export</goal>
                        </goals>
                        <configuration>
                            <targetFolder>target/generated-sources/java</targetFolder>
                            <packages>
                                <package>in.co.psoft.hrm.domain</package>
                            </packages>
                            <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
                    
            <plugin>
                <groupId>de.empulse.eclipselink</groupId>
                <artifactId>staticweave-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>weave</goal>
                        </goals>
                        <configuration>
                            <persistenceXMLLocation>META-INF/persistence.xml</persistenceXMLLocation>
                            <logLevel>INFO</logLevel>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.eclipse.persistence</groupId>
                        <artifactId>org.eclipse.persistence.jpa</artifactId>
                        <version>${eclipselink.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
                    
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-instrument</artifactId>
                        <version>${spring.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <argLine>-javaagent:${settings.localRepository}/org/springframework/spring-instrument/${spring.version}/spring-instrument-${spring.version}.jar</argLine>
                </configuration>
            </plugin>
        
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>springloaded</artifactId>
                        <version>${springloaded.version}</version>
                    </dependency>
                    <dependency>
    <groupId>javax.enterprise</groupId>
    <artifactId>cdi-api</artifactId>
    <version>1.2</version>
</dependency>
                    <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-instrument</artifactId>
                        <version>${spring.version}</version>
                    </dependency>
                                   </dependencies>
                <configuration>
                    <!--
                        Eclipse:
                        If Eclipse configured to refresh the workspace automatically,
                        "mvn spring-boot:run" can fail
                        because Eclipse will copy resources into /target/classes after Boot Plugin deleted them,
                        so Spring Boot will pick up 2 schema.sql and will try execute both of them.
                        This option tells Boot Plugin not to use /src/main/resources directly.
                    -->
                    <addResources>false</addResources>
                
                    <!-- Normally you don't need to setup springloaded as Spring Boot Maven plugin
                         will detect its dependency and register it appropriately.
                         But we have already added the spring-instrument agent, so we will have to add springloaded explictly. -->               
                    <agent>
                        <agent>${settings.localRepository}/org/springframework/spring-instrument/${spring.version}/spring-instrument-${spring.version}.jar</agent>
                        <agent>${settings.localRepository}/org/springframework/springloaded/${springloaded.version}/springloaded-${springloaded.version}.jar</agent>
                    </agent>
                    <noverify>true</noverify>
                </configuration>
            </plugin>

        </plugins>
        
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>de.empulse.eclipselink</groupId>
                                        <artifactId>staticweave-maven-plugin</artifactId>
                                        <versionRange>[1.0,)</versionRange>
                                        <goals>
                                            <goal>weave</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore/>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                   <pluginExecutionFilter>
                                       <groupId>com.mysema.querydsl</groupId>
                                       <artifactId>querydsl-maven-plugin</artifactId>
                                       <versionRange>[3.6,)</versionRange>
                                       <goals>
                                           <goal>generic-export</goal>
                                           <goal>jdo-export</goal>
                                           <goal>jpa-export</goal>
                                           <goal>export</goal>
                                           <goal>test-export</goal>
                                       </goals>
                                   </pluginExecutionFilter>
                                   <action>
                                       <execute>
                                          <runOnIncremental>false</runOnIncremental>
                                          <runOnConfiguration>true</runOnConfiguration>
                                       </execute>
                                   </action>
                               </pluginExecution>                                
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

    </build>
	
</project>